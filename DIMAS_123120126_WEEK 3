{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "Minggu 3"
      ],
      "metadata": {
        "id": "XOgLELgz_59G"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def sapa (nama):\n",
        "  print (f\"halo {nama},selamat pagi\")\n",
        "  nama = \"dimas\"\n",
        "sapa (nama)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7-8K4r8l__BU",
        "outputId": "a7c64b67-1037-445d-c623-6918c60606c2"
      },
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "halo dimas,selamat pagi\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "fungsi dengan return"
      ],
      "metadata": {
        "id": "5IQjlXooA-u1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def luas_persegi(sisi):\n",
        "  luas = sisi*sisi\n",
        "  return luas"
      ],
      "metadata": {
        "id": "HQ5UOOIIBC8m"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        " hasil = luas_persegi(4)\n",
        " print(hasil)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WpLnWLuABpNh",
        "outputId": "70be1141-2655-43e1-8af4-ce3151c91274"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "16\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "fungsi dengan parameter default"
      ],
      "metadata": {
        "id": "WdZfA7eqDlFd"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "F = G*(m1*m2/r**2)"
      ],
      "metadata": {
        "id": "vd2ZkxwcDgf_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def gaya_gravitasi(m1, m2, r, G=6.7e-11):\n",
        "  F = G*(m1*m2/r**2)\n",
        "  return F\n",
        "gaya_gravitasi(100, 200, 0.1, G=100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UxISVsaQDOxG",
        "outputId": "cefa2063-93f0-452b-9a99-55d2a9ea8b9e"
      },
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "199999999.99999994"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "_ltaeSx6DWaJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "fungsi dengan pointer(*)"
      ],
      "metadata": {
        "id": "hSc2AeMcDqcV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "def total(*args):\n",
        "  return sum(args)\n",
        "args = total(1, 2, 3, 4, 5)\n",
        "print(args)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PP4NchjVDwAL",
        "outputId": "b7fc389e-9e9b-44c0-85bd-8ddde930076d"
      },
      "execution_count": 15,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "15\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def total(*args):\n",
        "  print(args)\n",
        "  return sum(args)\n",
        "args = total(1, 2, 3, 4, 5)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZAhjZDg1FDUn",
        "outputId": "2fa4144c-1b08-4560-dfb5-7f7bb0f63ba0"
      },
      "execution_count": 16,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "(1, 2, 3, 4, 5)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "challenge"
      ],
      "metadata": {
        "id": "0mVW63suIwdG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# 5 challenge 1 Fungsi  untuk menghitung discount\n",
        "def harga_discount(harga,min_harga=100000,discount=20):\n",
        "    if harga > min_harga:\n",
        "        potongan_harga = discount*harga/100\n",
        "    else:\n",
        "        potongan_harga = 0\n",
        "    return harga-potongan_harga\n",
        "harga_discount(150000)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "nbhxTkCOJzdZ",
        "outputId": "6c7c5427-f1ab-46c1-d5cb-5e59e440d87e"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "120000.0"
            ]
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "lamda function"
      ],
      "metadata": {
        "id": "XDRqLvRfIiRn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "luas = lambda sisi : sisi*sisi\n",
        "\n",
        "print (luas(10))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "BB_P0iBzI2bz",
        "outputId": "1bb83061-57b9-4548-c15a-70a5c07f9d47"
      },
      "execution_count": 23,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "100\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Scope"
      ],
      "metadata": {
        "id": "1xalBjY3J9IQ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "x=10\n",
        "def ubah():\n",
        "  global x\n",
        "  x=30\n",
        "\n",
        "ubah()\n",
        "print (x)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CI5jRYj8Kuey",
        "outputId": "8b8ca85f-f540-4446-831c-bc9607da4647"
      },
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "30\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [],
      "metadata": {
        "id": "eJIZ6TckMBIR"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def luar ():\n",
        "  x=\"python\"\n",
        "def dalam():\n",
        "  print (\"dalam:\",x)\n",
        ""
      ],
      "metadata": {
        "id": "cE4aGdwJL_K_"
      },
      "execution_count": 41,
      "outputs": []
    }
  ]
}
